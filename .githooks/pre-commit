#!/bin/bash

# Pre-commit hook to check PHP code standards
# This script will run PHP CodeSniffer on staged PHP files

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

# Get the project root directory
PROJECT_ROOT="$(git rev-parse --show-toplevel)"
cd "$PROJECT_ROOT"

# Check if phpcs is available
if [ ! -f "./vendor/bin/phpcs" ]; then
    echo -e "${RED}Error: PHP CodeSniffer not found. Please run 'composer install' first.${NC}"
    exit 1
fi

# Get list of staged PHP files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.php$')

# If no PHP files are staged, exit successfully
if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}No PHP files to check.${NC}"
    exit 0
fi

echo -e "${YELLOW}Checking PHP code standards for staged files...${NC}"

# Create temporary file to store staged content
TEMP_DIR=$(mktemp -d)
trap "rm -rf $TEMP_DIR" EXIT

# Check each staged file
HAS_ERRORS=0
for FILE in $STAGED_FILES; do
    # Skip if file doesn't exist (might be deleted)
    if [ ! -f "$FILE" ]; then
        continue
    fi
    
    # Get the staged version of the file
    TEMP_FILE="$TEMP_DIR/$(basename $FILE)"
    git show ":$FILE" > "$TEMP_FILE" 2>/dev/null
    
    # Skip if we can't get the staged content
    if [ $? -ne 0 ]; then
        continue
    fi
    
    echo "Checking: $FILE"
    
    # Run phpcs on the staged version
    ./vendor/bin/phpcs "$TEMP_FILE" --standard=phpcs.xml --report=full
    
    if [ $? -ne 0 ]; then
        HAS_ERRORS=1
        echo -e "${RED}✗ Code standard violations found in: $FILE${NC}"
        echo -e "${YELLOW}You can try to fix these automatically by running:${NC}"
        echo -e "${YELLOW}  composer run phpcbf $FILE${NC}"
        echo ""
    else
        echo -e "${GREEN}✓ $FILE passes code standards${NC}"
    fi
done

# If there are errors, prevent the commit
if [ $HAS_ERRORS -eq 1 ]; then
    echo -e "${RED}"
    echo "=================================================="
    echo "COMMIT REJECTED"
    echo "=================================================="
    echo "Your commit contains files that violate the PHP"
    echo "coding standards defined in phpcs.xml."
    echo ""
    echo "Please fix the issues above and try again."
    echo ""
    echo "You can run the following commands to help:"
    echo "  composer run phpcs  - Check all files"
    echo "  composer run phpcbf - Auto-fix what's possible"
    echo "=================================================="
    echo -e "${NC}"
    exit 1
fi

echo -e "${GREEN}All staged PHP files pass code standards! ✓${NC}"
exit 0